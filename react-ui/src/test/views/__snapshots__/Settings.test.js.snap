// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Settings />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <InfoAlert
          onClose={[Function]}
        >
          On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.
        </InfoAlert>,
        <h1>
          Settings
        </h1>,
        <hr />,
        <h3>
          User settings
        </h3>,
        <Row
          tag="div"
        >
          <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <FormGroup
              check={true}
              inline={true}
              tag="div"
            >
              <Label
                for="notifyInput"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <Input
                  checked={Array []}
                  id="notifyInput"
                  onChange={[Function]}
                  type="checkbox"
                />
                I want to recieve information about 
                <span
                  id="Tooltip1"
                  style={
                    Object {
                      "borderBottom": "1px dotted",
                      "cursor": "pointer",
                    }
                  }
                >
                  massage changes
                </span>
              </Label>
            </FormGroup>
            <Tooltip
              autohide={true}
              delay={
                Object {
                  "hide": 250,
                  "show": 0,
                }
              }
              hideArrow={false}
              isOpen={false}
              placement="top"
              placementPrefix="bs-tooltip"
              target="Tooltip1"
              toggle={[Function]}
            >
              Scheduling of new and cancellation of assigned massages
            </Tooltip>
          </Col>
        </Row>,
        <h3>
          About
        </h3>,
        <Row
          tag="div"
        >
          <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Visit our 
            <a
              href="https://github.com/"
              rel="noreferrer noopener"
              target="_blank"
            >
              GitHub
            </a>
            Â 
             and our 
            <a
              href="https://github.com/wiki"
              rel="noreferrer noopener"
              target="_blank"
            >
              wiki
            </a>
            !
          </Col>
        </Row>,
        <Row
          tag="div"
        >
          <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Report issues 
            <a
              href="https://github.com/issues"
              rel="noreferrer noopener"
              target="_blank"
            >
              here
            </a>
            .
          </Col>
        </Row>,
      ],
      "className": "my-3",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.",
          "onClose": [Function],
        },
        "ref": null,
        "rendered": "On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            "Settings",
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          "Settings",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": "hr",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "User settings",
        },
        "ref": null,
        "rendered": "User settings",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <FormGroup
              check={true}
              inline={true}
              tag="div"
            >
              <Label
                for="notifyInput"
                tag="label"
                widths={
                  Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ]
                }
              >
                <Input
                  checked={Array []}
                  id="notifyInput"
                  onChange={[Function]}
                  type="checkbox"
                />
                I want to recieve information about 
                <span
                  id="Tooltip1"
                  style={
                    Object {
                      "borderBottom": "1px dotted",
                      "cursor": "pointer",
                    }
                  }
                >
                  massage changes
                </span>
              </Label>
            </FormGroup>
            <Tooltip
              autohide={true}
              delay={
                Object {
                  "hide": 250,
                  "show": 0,
                }
              }
              hideArrow={false}
              isOpen={false}
              placement="top"
              placementPrefix="bs-tooltip"
              target="Tooltip1"
              toggle={[Function]}
            >
              Scheduling of new and cancellation of assigned massages
            </Tooltip>
          </Col>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <FormGroup
                check={true}
                inline={true}
                tag="div"
              >
                <Label
                  for="notifyInput"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <Input
                    checked={Array []}
                    id="notifyInput"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  I want to recieve information about 
                  <span
                    id="Tooltip1"
                    style={
                      Object {
                        "borderBottom": "1px dotted",
                        "cursor": "pointer",
                      }
                    }
                  >
                    massage changes
                  </span>
                </Label>
              </FormGroup>,
              <Tooltip
                autohide={true}
                delay={
                  Object {
                    "hide": 250,
                    "show": 0,
                  }
                }
                hideArrow={false}
                isOpen={false}
                placement="top"
                placementPrefix="bs-tooltip"
                target="Tooltip1"
                toggle={[Function]}
              >
                Scheduling of new and cancellation of assigned massages
              </Tooltip>,
            ],
            "md": "12",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "check": true,
                "children": <Label
                  for="notifyInput"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <Input
                    checked={Array []}
                    id="notifyInput"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  I want to recieve information about 
                  <span
                    id="Tooltip1"
                    style={
                      Object {
                        "borderBottom": "1px dotted",
                        "cursor": "pointer",
                      }
                    }
                  >
                    massage changes
                  </span>
                </Label>,
                "inline": true,
                "tag": "div",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <Input
                      checked={Array []}
                      id="notifyInput"
                      onChange={[Function]}
                      type="checkbox"
                    />,
                    "I want to recieve information about ",
                    <span
                      id="Tooltip1"
                      style={
                        Object {
                          "borderBottom": "1px dotted",
                          "cursor": "pointer",
                        }
                      }
                    >
                      massage changes
                    </span>,
                  ],
                  "for": "notifyInput",
                  "tag": "label",
                  "widths": Array [
                    "xs",
                    "sm",
                    "md",
                    "lg",
                    "xl",
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "checked": Array [],
                      "id": "notifyInput",
                      "onChange": [Function],
                      "type": "checkbox",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "I want to recieve information about ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "massage changes",
                      "id": "Tooltip1",
                      "style": Object {
                        "borderBottom": "1px dotted",
                        "cursor": "pointer",
                      },
                    },
                    "ref": null,
                    "rendered": "massage changes",
                    "type": "span",
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "autohide": true,
                "children": "Scheduling of new and cancellation of assigned massages",
                "delay": Object {
                  "hide": 250,
                  "show": 0,
                },
                "hideArrow": false,
                "isOpen": false,
                "placement": "top",
                "placementPrefix": "bs-tooltip",
                "target": "Tooltip1",
                "toggle": [Function],
              },
              "ref": null,
              "rendered": "Scheduling of new and cancellation of assigned massages",
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "About",
        },
        "ref": null,
        "rendered": "About",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Visit our 
            <a
              href="https://github.com/"
              rel="noreferrer noopener"
              target="_blank"
            >
              GitHub
            </a>
            Â 
             and our 
            <a
              href="https://github.com/wiki"
              rel="noreferrer noopener"
              target="_blank"
            >
              wiki
            </a>
            !
          </Col>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Visit our ",
              <a
                href="https://github.com/"
                rel="noreferrer noopener"
                target="_blank"
              >
                GitHub
              </a>,
              "Â ",
              " and our ",
              <a
                href="https://github.com/wiki"
                rel="noreferrer noopener"
                target="_blank"
              >
                wiki
              </a>,
              "!",
            ],
            "md": "12",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Visit our ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "GitHub",
                "href": "https://github.com/",
                "rel": "noreferrer noopener",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "GitHub",
              "type": "a",
            },
            "Â ",
            " and our ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "wiki",
                "href": "https://github.com/wiki",
                "rel": "noreferrer noopener",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "wiki",
              "type": "a",
            },
            "!",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            Report issues 
            <a
              href="https://github.com/issues"
              rel="noreferrer noopener"
              target="_blank"
            >
              here
            </a>
            .
          </Col>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              "Report issues ",
              <a
                href="https://github.com/issues"
                rel="noreferrer noopener"
                target="_blank"
              >
                here
              </a>,
              ".",
            ],
            "md": "12",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Array [
            "Report issues ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "here",
                "href": "https://github.com/issues",
                "rel": "noreferrer noopener",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "here",
              "type": "a",
            },
            ".",
          ],
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <InfoAlert
            onClose={[Function]}
          >
            On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.
          </InfoAlert>,
          <h1>
            Settings
          </h1>,
          <hr />,
          <h3>
            User settings
          </h3>,
          <Row
            tag="div"
          >
            <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <FormGroup
                check={true}
                inline={true}
                tag="div"
              >
                <Label
                  for="notifyInput"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <Input
                    checked={Array []}
                    id="notifyInput"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  I want to recieve information about 
                  <span
                    id="Tooltip1"
                    style={
                      Object {
                        "borderBottom": "1px dotted",
                        "cursor": "pointer",
                      }
                    }
                  >
                    massage changes
                  </span>
                </Label>
              </FormGroup>
              <Tooltip
                autohide={true}
                delay={
                  Object {
                    "hide": 250,
                    "show": 0,
                  }
                }
                hideArrow={false}
                isOpen={false}
                placement="top"
                placementPrefix="bs-tooltip"
                target="Tooltip1"
                toggle={[Function]}
              >
                Scheduling of new and cancellation of assigned massages
              </Tooltip>
            </Col>
          </Row>,
          <h3>
            About
          </h3>,
          <Row
            tag="div"
          >
            <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Visit our 
              <a
                href="https://github.com/"
                rel="noreferrer noopener"
                target="_blank"
              >
                GitHub
              </a>
              Â 
               and our 
              <a
                href="https://github.com/wiki"
                rel="noreferrer noopener"
                target="_blank"
              >
                wiki
              </a>
              !
            </Col>
          </Row>,
          <Row
            tag="div"
          >
            <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Report issues 
              <a
                href="https://github.com/issues"
                rel="noreferrer noopener"
                target="_blank"
              >
                here
              </a>
              .
            </Col>
          </Row>,
        ],
        "className": "my-3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.",
            "onClose": [Function],
          },
          "ref": null,
          "rendered": "On this page you can manage your local user settings. You can also use this page to access our repository on GitHub.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              "Settings",
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            "Settings",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "hr",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "User settings",
          },
          "ref": null,
          "rendered": "User settings",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              <FormGroup
                check={true}
                inline={true}
                tag="div"
              >
                <Label
                  for="notifyInput"
                  tag="label"
                  widths={
                    Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ]
                  }
                >
                  <Input
                    checked={Array []}
                    id="notifyInput"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  I want to recieve information about 
                  <span
                    id="Tooltip1"
                    style={
                      Object {
                        "borderBottom": "1px dotted",
                        "cursor": "pointer",
                      }
                    }
                  >
                    massage changes
                  </span>
                </Label>
              </FormGroup>
              <Tooltip
                autohide={true}
                delay={
                  Object {
                    "hide": 250,
                    "show": 0,
                  }
                }
                hideArrow={false}
                isOpen={false}
                placement="top"
                placementPrefix="bs-tooltip"
                target="Tooltip1"
                toggle={[Function]}
              >
                Scheduling of new and cancellation of assigned massages
              </Tooltip>
            </Col>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <FormGroup
                  check={true}
                  inline={true}
                  tag="div"
                >
                  <Label
                    for="notifyInput"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <Input
                      checked={Array []}
                      id="notifyInput"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    I want to recieve information about 
                    <span
                      id="Tooltip1"
                      style={
                        Object {
                          "borderBottom": "1px dotted",
                          "cursor": "pointer",
                        }
                      }
                    >
                      massage changes
                    </span>
                  </Label>
                </FormGroup>,
                <Tooltip
                  autohide={true}
                  delay={
                    Object {
                      "hide": 250,
                      "show": 0,
                    }
                  }
                  hideArrow={false}
                  isOpen={false}
                  placement="top"
                  placementPrefix="bs-tooltip"
                  target="Tooltip1"
                  toggle={[Function]}
                >
                  Scheduling of new and cancellation of assigned massages
                </Tooltip>,
              ],
              "md": "12",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "check": true,
                  "children": <Label
                    for="notifyInput"
                    tag="label"
                    widths={
                      Array [
                        "xs",
                        "sm",
                        "md",
                        "lg",
                        "xl",
                      ]
                    }
                  >
                    <Input
                      checked={Array []}
                      id="notifyInput"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    I want to recieve information about 
                    <span
                      id="Tooltip1"
                      style={
                        Object {
                          "borderBottom": "1px dotted",
                          "cursor": "pointer",
                        }
                      }
                    >
                      massage changes
                    </span>
                  </Label>,
                  "inline": true,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      <Input
                        checked={Array []}
                        id="notifyInput"
                        onChange={[Function]}
                        type="checkbox"
                      />,
                      "I want to recieve information about ",
                      <span
                        id="Tooltip1"
                        style={
                          Object {
                            "borderBottom": "1px dotted",
                            "cursor": "pointer",
                          }
                        }
                      >
                        massage changes
                      </span>,
                    ],
                    "for": "notifyInput",
                    "tag": "label",
                    "widths": Array [
                      "xs",
                      "sm",
                      "md",
                      "lg",
                      "xl",
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "checked": Array [],
                        "id": "notifyInput",
                        "onChange": [Function],
                        "type": "checkbox",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "I want to recieve information about ",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "massage changes",
                        "id": "Tooltip1",
                        "style": Object {
                          "borderBottom": "1px dotted",
                          "cursor": "pointer",
                        },
                      },
                      "ref": null,
                      "rendered": "massage changes",
                      "type": "span",
                    },
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autohide": true,
                  "children": "Scheduling of new and cancellation of assigned massages",
                  "delay": Object {
                    "hide": 250,
                    "show": 0,
                  },
                  "hideArrow": false,
                  "isOpen": false,
                  "placement": "top",
                  "placementPrefix": "bs-tooltip",
                  "target": "Tooltip1",
                  "toggle": [Function],
                },
                "ref": null,
                "rendered": "Scheduling of new and cancellation of assigned massages",
                "type": [Function],
              },
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "About",
          },
          "ref": null,
          "rendered": "About",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Visit our 
              <a
                href="https://github.com/"
                rel="noreferrer noopener"
                target="_blank"
              >
                GitHub
              </a>
              Â 
               and our 
              <a
                href="https://github.com/wiki"
                rel="noreferrer noopener"
                target="_blank"
              >
                wiki
              </a>
              !
            </Col>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Visit our ",
                <a
                  href="https://github.com/"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  GitHub
                </a>,
                "Â ",
                " and our ",
                <a
                  href="https://github.com/wiki"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  wiki
                </a>,
                "!",
              ],
              "md": "12",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Visit our ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "GitHub",
                  "href": "https://github.com/",
                  "rel": "noreferrer noopener",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": "GitHub",
                "type": "a",
              },
              "Â ",
              " and our ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "wiki",
                  "href": "https://github.com/wiki",
                  "rel": "noreferrer noopener",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": "wiki",
                "type": "a",
              },
              "!",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <Col
              md="12"
              tag="div"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              Report issues 
              <a
                href="https://github.com/issues"
                rel="noreferrer noopener"
                target="_blank"
              >
                here
              </a>
              .
            </Col>,
            "tag": "div",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                "Report issues ",
                <a
                  href="https://github.com/issues"
                  rel="noreferrer noopener"
                  target="_blank"
                >
                  here
                </a>,
                ".",
              ],
              "md": "12",
              "tag": "div",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": Array [
              "Report issues ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "here",
                  "href": "https://github.com/issues",
                  "rel": "noreferrer noopener",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": "here",
                "type": "a",
              },
              ".",
            ],
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
