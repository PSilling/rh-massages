// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Facilities />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <InfoAlert
          onClose={[Function]}
        >
          On this page you can manage facilities in which massages take place.
        </InfoAlert>,
        <h1>
          Facilities
        </h1>,
        <Table
          hover={true}
          responsive={true}
          responsiveTag="div"
          size="sm"
          striped={true}
          tag="table"
        >
          <thead>
            <tr>
              <th
                scope="col"
              >
                Name
              </th>
              <th
                scope="col"
              >
                <FacilityModal
                  active={false}
                  facility={null}
                  getCallback={[Function]}
                  onToggle={[Function]}
                  withPortal={true}
                />
              </th>
            </tr>
          </thead>
          <tbody>
            <FacilityRow
              facility={
                Object {
                  "id": 1,
                  "name": "test",
                }
              }
              onDelete={[Function]}
              onEdit={[Function]}
            />
          </tbody>
        </Table>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "On this page you can manage facilities in which massages take place.",
          "onClose": [Function],
        },
        "ref": null,
        "rendered": "On this page you can manage facilities in which massages take place.",
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            false,
            "Facilities",
          ],
        },
        "ref": null,
        "rendered": Array [
          false,
          "Facilities",
        ],
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <thead>
              <tr>
                <th
                  scope="col"
                >
                  Name
                </th>
                <th
                  scope="col"
                >
                  <FacilityModal
                    active={false}
                    facility={null}
                    getCallback={[Function]}
                    onToggle={[Function]}
                    withPortal={true}
                  />
                </th>
              </tr>
            </thead>,
            <tbody>
              <FacilityRow
                facility={
                  Object {
                    "id": 1,
                    "name": "test",
                  }
                }
                onDelete={[Function]}
                onEdit={[Function]}
              />
            </tbody>,
          ],
          "hover": true,
          "responsive": true,
          "responsiveTag": "div",
          "size": "sm",
          "striped": true,
          "tag": "table",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tr>
                <th
                  scope="col"
                >
                  Name
                </th>
                <th
                  scope="col"
                >
                  <FacilityModal
                    active={false}
                    facility={null}
                    getCallback={[Function]}
                    onToggle={[Function]}
                    withPortal={true}
                  />
                </th>
              </tr>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <th
                    scope="col"
                  >
                    Name
                  </th>,
                  <th
                    scope="col"
                  >
                    <FacilityModal
                      active={false}
                      facility={null}
                      getCallback={[Function]}
                      onToggle={[Function]}
                      withPortal={true}
                    />
                  </th>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Name",
                    "scope": "col",
                  },
                  "ref": null,
                  "rendered": "Name",
                  "type": "th",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <FacilityModal
                      active={false}
                      facility={null}
                      getCallback={[Function]}
                      onToggle={[Function]}
                      withPortal={true}
                    />,
                    "scope": "col",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "active": false,
                      "facility": null,
                      "getCallback": [Function],
                      "onToggle": [Function],
                      "withPortal": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "th",
                },
              ],
              "type": "tr",
            },
            "type": "thead",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <FacilityRow
                  facility={
                    Object {
                      "id": 1,
                      "name": "test",
                    }
                  }
                  onDelete={[Function]}
                  onEdit={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "class",
                "props": Object {
                  "facility": Object {
                    "id": 1,
                    "name": "test",
                  },
                  "onDelete": [Function],
                  "onEdit": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "tbody",
          },
        ],
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <InfoAlert
            onClose={[Function]}
          >
            On this page you can manage facilities in which massages take place.
          </InfoAlert>,
          <h1>
            Facilities
          </h1>,
          <Table
            hover={true}
            responsive={true}
            responsiveTag="div"
            size="sm"
            striped={true}
            tag="table"
          >
            <thead>
              <tr>
                <th
                  scope="col"
                >
                  Name
                </th>
                <th
                  scope="col"
                >
                  <FacilityModal
                    active={false}
                    facility={null}
                    getCallback={[Function]}
                    onToggle={[Function]}
                    withPortal={true}
                  />
                </th>
              </tr>
            </thead>
            <tbody>
              <FacilityRow
                facility={
                  Object {
                    "id": 1,
                    "name": "test",
                  }
                }
                onDelete={[Function]}
                onEdit={[Function]}
              />
            </tbody>
          </Table>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "On this page you can manage facilities in which massages take place.",
            "onClose": [Function],
          },
          "ref": null,
          "rendered": "On this page you can manage facilities in which massages take place.",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              false,
              "Facilities",
            ],
          },
          "ref": null,
          "rendered": Array [
            false,
            "Facilities",
          ],
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <thead>
                <tr>
                  <th
                    scope="col"
                  >
                    Name
                  </th>
                  <th
                    scope="col"
                  >
                    <FacilityModal
                      active={false}
                      facility={null}
                      getCallback={[Function]}
                      onToggle={[Function]}
                      withPortal={true}
                    />
                  </th>
                </tr>
              </thead>,
              <tbody>
                <FacilityRow
                  facility={
                    Object {
                      "id": 1,
                      "name": "test",
                    }
                  }
                  onDelete={[Function]}
                  onEdit={[Function]}
                />
              </tbody>,
            ],
            "hover": true,
            "responsive": true,
            "responsiveTag": "div",
            "size": "sm",
            "striped": true,
            "tag": "table",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tr>
                  <th
                    scope="col"
                  >
                    Name
                  </th>
                  <th
                    scope="col"
                  >
                    <FacilityModal
                      active={false}
                      facility={null}
                      getCallback={[Function]}
                      onToggle={[Function]}
                      withPortal={true}
                    />
                  </th>
                </tr>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <th
                      scope="col"
                    >
                      Name
                    </th>,
                    <th
                      scope="col"
                    >
                      <FacilityModal
                        active={false}
                        facility={null}
                        getCallback={[Function]}
                        onToggle={[Function]}
                        withPortal={true}
                      />
                    </th>,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Name",
                      "scope": "col",
                    },
                    "ref": null,
                    "rendered": "Name",
                    "type": "th",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <FacilityModal
                        active={false}
                        facility={null}
                        getCallback={[Function]}
                        onToggle={[Function]}
                        withPortal={true}
                      />,
                      "scope": "col",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "active": false,
                        "facility": null,
                        "getCallback": [Function],
                        "onToggle": [Function],
                        "withPortal": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "th",
                  },
                ],
                "type": "tr",
              },
              "type": "thead",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <FacilityRow
                    facility={
                      Object {
                        "id": 1,
                        "name": "test",
                      }
                    }
                    onDelete={[Function]}
                    onEdit={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "1",
                  "nodeType": "class",
                  "props": Object {
                    "facility": Object {
                      "id": 1,
                      "name": "test",
                    },
                    "onDelete": [Function],
                    "onEdit": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "tbody",
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
