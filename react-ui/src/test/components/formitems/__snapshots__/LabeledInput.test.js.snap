// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content with correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <LabeledInput
    label="test"
    onChange={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    onEnterPress={[Function]}
    options={Array []}
    size="12"
    tooltip="tooltip"
    value="value"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <FormGroup
        tag="div"
      >
        <Label
          for="Tooltip1_input"
          id="Tooltip1"
          tag="label"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          test
        </Label>
        <Input
          id="Tooltip1_input"
          list="undefined_list"
          onChange={
            [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            }
          }
          onFocus={[Function]}
          onKeyPress={[Function]}
          placeholder="test"
          type="text"
          value="value"
        />
        <Tooltip
          autohide={true}
          delay={
            Object {
              "hide": 250,
              "show": 0,
            }
          }
          hideArrow={false}
          isOpen={false}
          placement="top"
          placementPrefix="bs-tooltip"
          target="Tooltip1"
          toggle={[Function]}
        >
          tooltip
        </Tooltip>
      </FormGroup>,
      "md": "12",
      "tag": "div",
      "widths": Array [
        "xs",
        "sm",
        "md",
        "lg",
        "xl",
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <Label
            for="Tooltip1_input"
            id="Tooltip1"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            test
          </Label>,
          <Input
            id="Tooltip1_input"
            list="undefined_list"
            onChange={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              }
            }
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="test"
            type="text"
            value="value"
          />,
          false,
          <Tooltip
            autohide={true}
            delay={
              Object {
                "hide": 250,
                "show": 0,
              }
            }
            hideArrow={false}
            isOpen={false}
            placement="top"
            placementPrefix="bs-tooltip"
            target="Tooltip1"
            toggle={[Function]}
          >
            tooltip
          </Tooltip>,
        ],
        "tag": "div",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "test",
            "for": "Tooltip1_input",
            "id": "Tooltip1",
            "tag": "label",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": "test",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "id": "Tooltip1_input",
            "list": "undefined_list",
            "onChange": [MockFunction] {
              "calls": Array [
                Array [],
              ],
              "results": Array [
                Object {
                  "isThrow": false,
                  "value": undefined,
                },
              ],
            },
            "onFocus": [Function],
            "onKeyPress": [Function],
            "placeholder": "test",
            "type": "text",
            "value": "value",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "autohide": true,
            "children": "tooltip",
            "delay": Object {
              "hide": 250,
              "show": 0,
            },
            "hideArrow": false,
            "isOpen": false,
            "placement": "top",
            "placementPrefix": "bs-tooltip",
            "target": "Tooltip1",
            "toggle": [Function],
          },
          "ref": null,
          "rendered": "tooltip",
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <FormGroup
          tag="div"
        >
          <Label
            for="Tooltip1_input"
            id="Tooltip1"
            tag="label"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            test
          </Label>
          <Input
            id="Tooltip1_input"
            list="undefined_list"
            onChange={
              [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              }
            }
            onFocus={[Function]}
            onKeyPress={[Function]}
            placeholder="test"
            type="text"
            value="value"
          />
          <Tooltip
            autohide={true}
            delay={
              Object {
                "hide": 250,
                "show": 0,
              }
            }
            hideArrow={false}
            isOpen={false}
            placement="top"
            placementPrefix="bs-tooltip"
            target="Tooltip1"
            toggle={[Function]}
          >
            tooltip
          </Tooltip>
        </FormGroup>,
        "md": "12",
        "tag": "div",
        "widths": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Label
              for="Tooltip1_input"
              id="Tooltip1"
              tag="label"
              widths={
                Array [
                  "xs",
                  "sm",
                  "md",
                  "lg",
                  "xl",
                ]
              }
            >
              test
            </Label>,
            <Input
              id="Tooltip1_input"
              list="undefined_list"
              onChange={
                [MockFunction] {
                  "calls": Array [
                    Array [],
                  ],
                  "results": Array [
                    Object {
                      "isThrow": false,
                      "value": undefined,
                    },
                  ],
                }
              }
              onFocus={[Function]}
              onKeyPress={[Function]}
              placeholder="test"
              type="text"
              value="value"
            />,
            false,
            <Tooltip
              autohide={true}
              delay={
                Object {
                  "hide": 250,
                  "show": 0,
                }
              }
              hideArrow={false}
              isOpen={false}
              placement="top"
              placementPrefix="bs-tooltip"
              target="Tooltip1"
              toggle={[Function]}
            >
              tooltip
            </Tooltip>,
          ],
          "tag": "div",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "test",
              "for": "Tooltip1_input",
              "id": "Tooltip1",
              "tag": "label",
              "widths": Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ],
            },
            "ref": null,
            "rendered": "test",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "id": "Tooltip1_input",
              "list": "undefined_list",
              "onChange": [MockFunction] {
                "calls": Array [
                  Array [],
                ],
                "results": Array [
                  Object {
                    "isThrow": false,
                    "value": undefined,
                  },
                ],
              },
              "onFocus": [Function],
              "onKeyPress": [Function],
              "placeholder": "test",
              "type": "text",
              "value": "value",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "autohide": true,
              "children": "tooltip",
              "delay": Object {
                "hide": 250,
                "show": 0,
              },
              "hideArrow": false,
              "isOpen": false,
              "placement": "top",
              "placementPrefix": "bs-tooltip",
              "target": "Tooltip1",
              "toggle": [Function],
            },
            "ref": null,
            "rendered": "tooltip",
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
