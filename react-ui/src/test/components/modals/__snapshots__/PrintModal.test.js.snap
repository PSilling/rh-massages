// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders inside content with correct props and functionality 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <PrintModal
    events={
      Array [
        Object {
          "bgColor": "white",
          "massage": Object {
            "client": null,
            "date": 1970-01-01T00:00:00.000Z,
            "ending": 1970-01-01T00:00:01.000Z,
            "facility": Object {
              "id": 1,
              "name": "test",
            },
            "id": 1,
            "masseuse": Object {
              "email": "test@masseuse.org",
              "masseur": true,
              "name": "Masseuse",
              "sub": "m-sub",
              "subscribed": false,
              "surname": "Test",
            },
          },
        },
      ]
    }
    onPrint={
      [MockFunction] {
        "calls": Array [
          Array [
            Array [],
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
    withPortal={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <TooltipIconButton
          disabled={false}
          icon="print"
          onClick={[Function]}
          size="sm"
          style={
            Object {
              "border": "0px solid transparent",
            }
          }
          tooltip="Print my massage schedule"
        />,
        false,
      ],
      "className": "no-print float-right",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "disabled": false,
          "icon": "print",
          "onClick": [Function],
          "size": "sm",
          "style": Object {
            "border": "0px solid transparent",
          },
          "tooltip": "Print my massage schedule",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      false,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <TooltipIconButton
            disabled={false}
            icon="print"
            onClick={[Function]}
            size="sm"
            style={
              Object {
                "border": "0px solid transparent",
              }
            }
            tooltip="Print my massage schedule"
          />,
          false,
        ],
        "className": "no-print float-right",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "disabled": false,
            "icon": "print",
            "onClick": [Function],
            "size": "sm",
            "style": Object {
              "border": "0px solid transparent",
            },
            "tooltip": "Print my massage schedule",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
