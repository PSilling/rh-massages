// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content with correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <MyMassagePanel
    events={
      Array [
        Object {
          "massage": Object {
            "client": null,
            "date": 1970-01-01T00:00:00.000Z,
            "ending": 1970-01-01T00:00:00.000Z,
            "facility": Object {
              "id": 1,
              "name": "test",
            },
            "id": 1,
            "masseuse": Object {
              "email": "test@masseuse.org",
              "masseur": true,
              "name": "Masseuse",
              "sub": "m-sub",
              "subscribed": false,
              "surname": "Test",
            },
          },
        },
      ]
    }
    onCancel={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Row
        tag="div"
      >
        <Col
          md="12"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <ForwardRef
            defaultDate={1970-01-01T00:00:00.000Z}
            defaultView="view"
            endAccessor={[Function]}
            events={
              Array [
                Object {
                  "massage": Object {
                    "client": null,
                    "date": 1970-01-01T00:00:00.000Z,
                    "ending": 1970-01-01T00:00:00.000Z,
                    "facility": Object {
                      "id": 1,
                      "name": "test",
                    },
                    "id": 1,
                    "masseuse": Object {
                      "email": "test@masseuse.org",
                      "masseur": true,
                      "name": "Masseuse",
                      "sub": "m-sub",
                      "subscribed": false,
                      "surname": "Test",
                    },
                  },
                },
              ]
            }
            length={365}
            localizer={
              DateLocalizer {
                "format": [Function],
                "formats": Object {
                  "agendaDateFormat": "ddd MMM DD",
                  "agendaHeaderFormat": [Function],
                  "agendaTimeFormat": "LT",
                  "agendaTimeRangeFormat": [Function],
                  "dateFormat": "DD",
                  "dayFormat": "DD ddd",
                  "dayHeaderFormat": "dddd MMM DD",
                  "dayRangeHeaderFormat": [Function],
                  "eventTimeRangeEndFormat": [Function],
                  "eventTimeRangeFormat": [Function],
                  "eventTimeRangeStartFormat": [Function],
                  "monthHeaderFormat": "MMMM YYYY",
                  "selectRangeFormat": [Function],
                  "timeGutterFormat": "LT",
                  "weekdayFormat": "ddd",
                },
                "propType": [Function],
                "startOfWeek": [Function],
              }
            }
            messages={
              Object {
                "allDay": "All day",
                "date": "Date",
                "event": "Event",
                "time": "Time",
              }
            }
            onCancel={[MockFunction]}
            startAccessor={[Function]}
            style={
              Object {
                "height": "85vh",
              }
            }
            titleAccessor={[Function]}
            toolbar={false}
            views={
              Object {
                "view": [Function],
              }
            }
          />
        </Col>
      </Row>,
      "className": "mb-3",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <Col
          md="12"
          tag="div"
          widths={
            Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ]
          }
        >
          <ForwardRef
            defaultDate={1970-01-01T00:00:00.000Z}
            defaultView="view"
            endAccessor={[Function]}
            events={
              Array [
                Object {
                  "massage": Object {
                    "client": null,
                    "date": 1970-01-01T00:00:00.000Z,
                    "ending": 1970-01-01T00:00:00.000Z,
                    "facility": Object {
                      "id": 1,
                      "name": "test",
                    },
                    "id": 1,
                    "masseuse": Object {
                      "email": "test@masseuse.org",
                      "masseur": true,
                      "name": "Masseuse",
                      "sub": "m-sub",
                      "subscribed": false,
                      "surname": "Test",
                    },
                  },
                },
              ]
            }
            length={365}
            localizer={
              DateLocalizer {
                "format": [Function],
                "formats": Object {
                  "agendaDateFormat": "ddd MMM DD",
                  "agendaHeaderFormat": [Function],
                  "agendaTimeFormat": "LT",
                  "agendaTimeRangeFormat": [Function],
                  "dateFormat": "DD",
                  "dayFormat": "DD ddd",
                  "dayHeaderFormat": "dddd MMM DD",
                  "dayRangeHeaderFormat": [Function],
                  "eventTimeRangeEndFormat": [Function],
                  "eventTimeRangeFormat": [Function],
                  "eventTimeRangeStartFormat": [Function],
                  "monthHeaderFormat": "MMMM YYYY",
                  "selectRangeFormat": [Function],
                  "timeGutterFormat": "LT",
                  "weekdayFormat": "ddd",
                },
                "propType": [Function],
                "startOfWeek": [Function],
              }
            }
            messages={
              Object {
                "allDay": "All day",
                "date": "Date",
                "event": "Event",
                "time": "Time",
              }
            }
            onCancel={[MockFunction]}
            startAccessor={[Function]}
            style={
              Object {
                "height": "85vh",
              }
            }
            titleAccessor={[Function]}
            toolbar={false}
            views={
              Object {
                "view": [Function],
              }
            }
          />
        </Col>,
        "tag": "div",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <ForwardRef
            defaultDate={1970-01-01T00:00:00.000Z}
            defaultView="view"
            endAccessor={[Function]}
            events={
              Array [
                Object {
                  "massage": Object {
                    "client": null,
                    "date": 1970-01-01T00:00:00.000Z,
                    "ending": 1970-01-01T00:00:00.000Z,
                    "facility": Object {
                      "id": 1,
                      "name": "test",
                    },
                    "id": 1,
                    "masseuse": Object {
                      "email": "test@masseuse.org",
                      "masseur": true,
                      "name": "Masseuse",
                      "sub": "m-sub",
                      "subscribed": false,
                      "surname": "Test",
                    },
                  },
                },
              ]
            }
            length={365}
            localizer={
              DateLocalizer {
                "format": [Function],
                "formats": Object {
                  "agendaDateFormat": "ddd MMM DD",
                  "agendaHeaderFormat": [Function],
                  "agendaTimeFormat": "LT",
                  "agendaTimeRangeFormat": [Function],
                  "dateFormat": "DD",
                  "dayFormat": "DD ddd",
                  "dayHeaderFormat": "dddd MMM DD",
                  "dayRangeHeaderFormat": [Function],
                  "eventTimeRangeEndFormat": [Function],
                  "eventTimeRangeFormat": [Function],
                  "eventTimeRangeStartFormat": [Function],
                  "monthHeaderFormat": "MMMM YYYY",
                  "selectRangeFormat": [Function],
                  "timeGutterFormat": "LT",
                  "weekdayFormat": "ddd",
                },
                "propType": [Function],
                "startOfWeek": [Function],
              }
            }
            messages={
              Object {
                "allDay": "All day",
                "date": "Date",
                "event": "Event",
                "time": "Time",
              }
            }
            onCancel={[MockFunction]}
            startAccessor={[Function]}
            style={
              Object {
                "height": "85vh",
              }
            }
            titleAccessor={[Function]}
            toolbar={false}
            views={
              Object {
                "view": [Function],
              }
            }
          />,
          "md": "12",
          "tag": "div",
          "widths": Array [
            "xs",
            "sm",
            "md",
            "lg",
            "xl",
          ],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "defaultDate": 1970-01-01T00:00:00.000Z,
            "defaultView": "view",
            "endAccessor": [Function],
            "events": Array [
              Object {
                "massage": Object {
                  "client": null,
                  "date": 1970-01-01T00:00:00.000Z,
                  "ending": 1970-01-01T00:00:00.000Z,
                  "facility": Object {
                    "id": 1,
                    "name": "test",
                  },
                  "id": 1,
                  "masseuse": Object {
                    "email": "test@masseuse.org",
                    "masseur": true,
                    "name": "Masseuse",
                    "sub": "m-sub",
                    "subscribed": false,
                    "surname": "Test",
                  },
                },
              },
            ],
            "length": 365,
            "localizer": DateLocalizer {
              "format": [Function],
              "formats": Object {
                "agendaDateFormat": "ddd MMM DD",
                "agendaHeaderFormat": [Function],
                "agendaTimeFormat": "LT",
                "agendaTimeRangeFormat": [Function],
                "dateFormat": "DD",
                "dayFormat": "DD ddd",
                "dayHeaderFormat": "dddd MMM DD",
                "dayRangeHeaderFormat": [Function],
                "eventTimeRangeEndFormat": [Function],
                "eventTimeRangeFormat": [Function],
                "eventTimeRangeStartFormat": [Function],
                "monthHeaderFormat": "MMMM YYYY",
                "selectRangeFormat": [Function],
                "timeGutterFormat": "LT",
                "weekdayFormat": "ddd",
              },
              "propType": [Function],
              "startOfWeek": [Function],
            },
            "messages": Object {
              "allDay": "All day",
              "date": "Date",
              "event": "Event",
              "time": "Time",
            },
            "onCancel": [MockFunction],
            "slotPropGetter": undefined,
            "startAccessor": [Function],
            "style": Object {
              "height": "85vh",
            },
            "titleAccessor": [Function],
            "toolbar": false,
            "views": Object {
              "view": [Function],
            },
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "ControlledComponent": [Function],
            "Navigate": Object {
              "DATE": "DATE",
              "NEXT": "NEXT",
              "PREVIOUS": "PREV",
              "TODAY": "TODAY",
            },
            "Views": Object {
              "AGENDA": "agenda",
              "DAY": "day",
              "MONTH": "month",
              "WEEK": "week",
              "WORK_WEEK": "work_week",
            },
            "components": Object {
              "dateCellWrapper": [Function],
              "dayWrapper": [Function],
              "eventWrapper": [Function],
            },
            "deferControlTo": [Function],
            "globalizeLocalizer": [Function],
            "momentLocalizer": [Function],
            "move": [Function],
            "propTypes": Object {
              "date": [Function],
              "defaultDate": [Function],
              "defaultSelected": [Function],
              "defaultView": [Function],
              "innerRef": [Function],
              "selected": [Function],
              "view": [Function],
            },
            "render": [Function],
          },
        },
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Row
          tag="div"
        >
          <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <ForwardRef
              defaultDate={1970-01-01T00:00:00.000Z}
              defaultView="view"
              endAccessor={[Function]}
              events={
                Array [
                  Object {
                    "massage": Object {
                      "client": null,
                      "date": 1970-01-01T00:00:00.000Z,
                      "ending": 1970-01-01T00:00:00.000Z,
                      "facility": Object {
                        "id": 1,
                        "name": "test",
                      },
                      "id": 1,
                      "masseuse": Object {
                        "email": "test@masseuse.org",
                        "masseur": true,
                        "name": "Masseuse",
                        "sub": "m-sub",
                        "subscribed": false,
                        "surname": "Test",
                      },
                    },
                  },
                ]
              }
              length={365}
              localizer={
                DateLocalizer {
                  "format": [Function],
                  "formats": Object {
                    "agendaDateFormat": "ddd MMM DD",
                    "agendaHeaderFormat": [Function],
                    "agendaTimeFormat": "LT",
                    "agendaTimeRangeFormat": [Function],
                    "dateFormat": "DD",
                    "dayFormat": "DD ddd",
                    "dayHeaderFormat": "dddd MMM DD",
                    "dayRangeHeaderFormat": [Function],
                    "eventTimeRangeEndFormat": [Function],
                    "eventTimeRangeFormat": [Function],
                    "eventTimeRangeStartFormat": [Function],
                    "monthHeaderFormat": "MMMM YYYY",
                    "selectRangeFormat": [Function],
                    "timeGutterFormat": "LT",
                    "weekdayFormat": "ddd",
                  },
                  "propType": [Function],
                  "startOfWeek": [Function],
                }
              }
              messages={
                Object {
                  "allDay": "All day",
                  "date": "Date",
                  "event": "Event",
                  "time": "Time",
                }
              }
              onCancel={[MockFunction]}
              startAccessor={[Function]}
              style={
                Object {
                  "height": "85vh",
                }
              }
              titleAccessor={[Function]}
              toolbar={false}
              views={
                Object {
                  "view": [Function],
                }
              }
            />
          </Col>
        </Row>,
        "className": "mb-3",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <Col
            md="12"
            tag="div"
            widths={
              Array [
                "xs",
                "sm",
                "md",
                "lg",
                "xl",
              ]
            }
          >
            <ForwardRef
              defaultDate={1970-01-01T00:00:00.000Z}
              defaultView="view"
              endAccessor={[Function]}
              events={
                Array [
                  Object {
                    "massage": Object {
                      "client": null,
                      "date": 1970-01-01T00:00:00.000Z,
                      "ending": 1970-01-01T00:00:00.000Z,
                      "facility": Object {
                        "id": 1,
                        "name": "test",
                      },
                      "id": 1,
                      "masseuse": Object {
                        "email": "test@masseuse.org",
                        "masseur": true,
                        "name": "Masseuse",
                        "sub": "m-sub",
                        "subscribed": false,
                        "surname": "Test",
                      },
                    },
                  },
                ]
              }
              length={365}
              localizer={
                DateLocalizer {
                  "format": [Function],
                  "formats": Object {
                    "agendaDateFormat": "ddd MMM DD",
                    "agendaHeaderFormat": [Function],
                    "agendaTimeFormat": "LT",
                    "agendaTimeRangeFormat": [Function],
                    "dateFormat": "DD",
                    "dayFormat": "DD ddd",
                    "dayHeaderFormat": "dddd MMM DD",
                    "dayRangeHeaderFormat": [Function],
                    "eventTimeRangeEndFormat": [Function],
                    "eventTimeRangeFormat": [Function],
                    "eventTimeRangeStartFormat": [Function],
                    "monthHeaderFormat": "MMMM YYYY",
                    "selectRangeFormat": [Function],
                    "timeGutterFormat": "LT",
                    "weekdayFormat": "ddd",
                  },
                  "propType": [Function],
                  "startOfWeek": [Function],
                }
              }
              messages={
                Object {
                  "allDay": "All day",
                  "date": "Date",
                  "event": "Event",
                  "time": "Time",
                }
              }
              onCancel={[MockFunction]}
              startAccessor={[Function]}
              style={
                Object {
                  "height": "85vh",
                }
              }
              titleAccessor={[Function]}
              toolbar={false}
              views={
                Object {
                  "view": [Function],
                }
              }
            />
          </Col>,
          "tag": "div",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <ForwardRef
              defaultDate={1970-01-01T00:00:00.000Z}
              defaultView="view"
              endAccessor={[Function]}
              events={
                Array [
                  Object {
                    "massage": Object {
                      "client": null,
                      "date": 1970-01-01T00:00:00.000Z,
                      "ending": 1970-01-01T00:00:00.000Z,
                      "facility": Object {
                        "id": 1,
                        "name": "test",
                      },
                      "id": 1,
                      "masseuse": Object {
                        "email": "test@masseuse.org",
                        "masseur": true,
                        "name": "Masseuse",
                        "sub": "m-sub",
                        "subscribed": false,
                        "surname": "Test",
                      },
                    },
                  },
                ]
              }
              length={365}
              localizer={
                DateLocalizer {
                  "format": [Function],
                  "formats": Object {
                    "agendaDateFormat": "ddd MMM DD",
                    "agendaHeaderFormat": [Function],
                    "agendaTimeFormat": "LT",
                    "agendaTimeRangeFormat": [Function],
                    "dateFormat": "DD",
                    "dayFormat": "DD ddd",
                    "dayHeaderFormat": "dddd MMM DD",
                    "dayRangeHeaderFormat": [Function],
                    "eventTimeRangeEndFormat": [Function],
                    "eventTimeRangeFormat": [Function],
                    "eventTimeRangeStartFormat": [Function],
                    "monthHeaderFormat": "MMMM YYYY",
                    "selectRangeFormat": [Function],
                    "timeGutterFormat": "LT",
                    "weekdayFormat": "ddd",
                  },
                  "propType": [Function],
                  "startOfWeek": [Function],
                }
              }
              messages={
                Object {
                  "allDay": "All day",
                  "date": "Date",
                  "event": "Event",
                  "time": "Time",
                }
              }
              onCancel={[MockFunction]}
              startAccessor={[Function]}
              style={
                Object {
                  "height": "85vh",
                }
              }
              titleAccessor={[Function]}
              toolbar={false}
              views={
                Object {
                  "view": [Function],
                }
              }
            />,
            "md": "12",
            "tag": "div",
            "widths": Array [
              "xs",
              "sm",
              "md",
              "lg",
              "xl",
            ],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "defaultDate": 1970-01-01T00:00:00.000Z,
              "defaultView": "view",
              "endAccessor": [Function],
              "events": Array [
                Object {
                  "massage": Object {
                    "client": null,
                    "date": 1970-01-01T00:00:00.000Z,
                    "ending": 1970-01-01T00:00:00.000Z,
                    "facility": Object {
                      "id": 1,
                      "name": "test",
                    },
                    "id": 1,
                    "masseuse": Object {
                      "email": "test@masseuse.org",
                      "masseur": true,
                      "name": "Masseuse",
                      "sub": "m-sub",
                      "subscribed": false,
                      "surname": "Test",
                    },
                  },
                },
              ],
              "length": 365,
              "localizer": DateLocalizer {
                "format": [Function],
                "formats": Object {
                  "agendaDateFormat": "ddd MMM DD",
                  "agendaHeaderFormat": [Function],
                  "agendaTimeFormat": "LT",
                  "agendaTimeRangeFormat": [Function],
                  "dateFormat": "DD",
                  "dayFormat": "DD ddd",
                  "dayHeaderFormat": "dddd MMM DD",
                  "dayRangeHeaderFormat": [Function],
                  "eventTimeRangeEndFormat": [Function],
                  "eventTimeRangeFormat": [Function],
                  "eventTimeRangeStartFormat": [Function],
                  "monthHeaderFormat": "MMMM YYYY",
                  "selectRangeFormat": [Function],
                  "timeGutterFormat": "LT",
                  "weekdayFormat": "ddd",
                },
                "propType": [Function],
                "startOfWeek": [Function],
              },
              "messages": Object {
                "allDay": "All day",
                "date": "Date",
                "event": "Event",
                "time": "Time",
              },
              "onCancel": [MockFunction],
              "slotPropGetter": undefined,
              "startAccessor": [Function],
              "style": Object {
                "height": "85vh",
              },
              "titleAccessor": [Function],
              "toolbar": false,
              "views": Object {
                "view": [Function],
              },
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "ControlledComponent": [Function],
              "Navigate": Object {
                "DATE": "DATE",
                "NEXT": "NEXT",
                "PREVIOUS": "PREV",
                "TODAY": "TODAY",
              },
              "Views": Object {
                "AGENDA": "agenda",
                "DAY": "day",
                "MONTH": "month",
                "WEEK": "week",
                "WORK_WEEK": "work_week",
              },
              "components": Object {
                "dateCellWrapper": [Function],
                "dayWrapper": [Function],
                "eventWrapper": [Function],
              },
              "deferControlTo": [Function],
              "globalizeLocalizer": [Function],
              "momentLocalizer": [Function],
              "move": [Function],
              "propTypes": Object {
                "date": [Function],
                "defaultDate": [Function],
                "defaultSelected": [Function],
                "defaultView": [Function],
                "innerRef": [Function],
                "selected": [Function],
                "view": [Function],
              },
              "render": [Function],
            },
          },
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
