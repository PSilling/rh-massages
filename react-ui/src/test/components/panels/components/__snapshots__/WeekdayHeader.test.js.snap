// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content with correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Header
    active={true}
    date={1970-01-01T00:00:00.000Z}
    label="testHeader"
    onClick={
      [MockFunction] {
        "calls": Array [
          Array [
            1970-01-01T00:00:00.000Z,
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "testHeader",
      "onClick": [Function],
      "onKeyPress": [Function],
      "role": "button",
      "style": Object {
        "border": "none",
        "outline": "none",
      },
      "tabIndex": "-3",
    },
    "ref": null,
    "rendered": "testHeader",
    "type": "span",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "testHeader",
        "onClick": [Function],
        "onKeyPress": [Function],
        "role": "button",
        "style": Object {
          "border": "none",
          "outline": "none",
        },
        "tabIndex": "-3",
      },
      "ref": null,
      "rendered": "testHeader",
      "type": "span",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
