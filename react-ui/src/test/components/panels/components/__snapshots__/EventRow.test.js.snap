// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders content with correct props 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventRow
    event={
      Object {
        "massage": Object {
          "client": null,
          "date": 1970-01-01T00:00:00.000Z,
          "ending": 1970-01-01T00:00:01.000Z,
          "facility": Object {
            "id": 1,
            "name": "test",
          },
          "id": 1,
          "masseuse": Object {
            "email": "test@masseuse.org",
            "masseur": true,
            "name": "Masseuse",
            "sub": "m-sub",
            "subscribed": false,
            "surname": "Test",
          },
        },
      }
    }
    onCancel={
      [MockFunction] {
        "calls": Array [
          Array [
            Object {
              "client": null,
              "date": 1970-01-01T00:00:00.000Z,
              "ending": 1970-01-01T00:00:01.000Z,
              "facility": Object {
                "id": 1,
                "name": "test",
              },
              "id": 1,
              "masseuse": Object {
                "email": "test@masseuse.org",
                "masseur": true,
                "name": "Masseuse",
                "sub": "m-sub",
                "subscribed": false,
                "surname": "Test",
              },
            },
          ],
        ],
        "results": Array [
          Object {
            "isThrow": false,
            "value": undefined,
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <td>
          01/01
        </td>,
        <td>
          1:00 AM – 1:00 AM
        </td>,
        <td
          colSpan="2"
        >
          <strong
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={
              Object {
                "cursor": "pointer",
              }
            }
            tabIndex="-1"
          >
            Masáž v test
          </strong>
          <br />
          <span>
            Masseuse Test
          </span>
        </td>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "01/01",
        },
        "ref": null,
        "rendered": "01/01",
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "1:00 AM – 1:00 AM",
        },
        "ref": null,
        "rendered": "1:00 AM – 1:00 AM",
        "type": "td",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <strong
              onClick={[Function]}
              onKeyPress={[Function]}
              role="button"
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              tabIndex="-1"
            >
              Masáž v test
            </strong>,
            <br />,
            <span>
              Masseuse Test
            </span>,
            false,
          ],
          "colSpan": "2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Masáž v test",
              "onClick": [Function],
              "onKeyPress": [Function],
              "role": "button",
              "style": Object {
                "cursor": "pointer",
              },
              "tabIndex": "-1",
            },
            "ref": null,
            "rendered": "Masáž v test",
            "type": "strong",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "br",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Masseuse Test",
            },
            "ref": null,
            "rendered": "Masseuse Test",
            "type": "span",
          },
          false,
        ],
        "type": "td",
      },
    ],
    "type": "tr",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <td>
            01/01
          </td>,
          <td>
            1:00 AM – 1:00 AM
          </td>,
          <td
            colSpan="2"
          >
            <strong
              onClick={[Function]}
              onKeyPress={[Function]}
              role="button"
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              tabIndex="-1"
            >
              Masáž v test
            </strong>
            <br />
            <span>
              Masseuse Test
            </span>
          </td>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "01/01",
          },
          "ref": null,
          "rendered": "01/01",
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "1:00 AM – 1:00 AM",
          },
          "ref": null,
          "rendered": "1:00 AM – 1:00 AM",
          "type": "td",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <strong
                onClick={[Function]}
                onKeyPress={[Function]}
                role="button"
                style={
                  Object {
                    "cursor": "pointer",
                  }
                }
                tabIndex="-1"
              >
                Masáž v test
              </strong>,
              <br />,
              <span>
                Masseuse Test
              </span>,
              false,
            ],
            "colSpan": "2",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Masáž v test",
                "onClick": [Function],
                "onKeyPress": [Function],
                "role": "button",
                "style": Object {
                  "cursor": "pointer",
                },
                "tabIndex": "-1",
              },
              "ref": null,
              "rendered": "Masáž v test",
              "type": "strong",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Masseuse Test",
              },
              "ref": null,
              "rendered": "Masseuse Test",
              "type": "span",
            },
            false,
          ],
          "type": "td",
        },
      ],
      "type": "tr",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
