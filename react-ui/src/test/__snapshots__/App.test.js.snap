// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders authenticated user content correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div>
        <NotificationContainer
          enterTimeout={400}
          leaveTimeout={400}
        />
        <withRouter() />
        <div
          className="container"
        >
          <ErrorBoundary>
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/my-massages"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/facilities"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/massages-archive"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/settings"
              />
              <Route
                component={[Function]}
              />
            </Switch>
          </ErrorBoundary>
        </div>
        <Footer />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NotificationContainer
            enterTimeout={400}
            leaveTimeout={400}
          />,
          <withRouter() />,
          <div
            className="container"
          >
            <ErrorBoundary>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/my-massages"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/facilities"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/massages-archive"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/settings"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </ErrorBoundary>
          </div>,
          <Footer />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "enterTimeout": 400,
            "leaveTimeout": 400,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <ErrorBoundary>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/my-massages"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/facilities"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/massages-archive"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/settings"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </ErrorBoundary>,
            "className": "container",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/my-massages"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/facilities"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/massages-archive"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/settings"
                />
                <Route
                  component={[Function]}
                />
              </Switch>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/my-massages"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/facilities"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/massages-archive"
                  />,
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/settings"
                  />,
                  <Route
                    component={[Function]}
                  />,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/my-massages",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/facilities",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/massages-archive",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "exact": true,
                    "path": "/settings",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <NotificationContainer
            enterTimeout={400}
            leaveTimeout={400}
          />
          <withRouter() />
          <div
            className="container"
          >
            <ErrorBoundary>
              <Switch>
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/my-massages"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/facilities"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/massages-archive"
                />
                <Route
                  component={[Function]}
                  exact={true}
                  path="/settings"
                />
                <Route
                  component={[Function]}
                />
              </Switch>
            </ErrorBoundary>
          </div>
          <Footer />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NotificationContainer
              enterTimeout={400}
              leaveTimeout={400}
            />,
            <withRouter() />,
            <div
              className="container"
            >
              <ErrorBoundary>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/my-massages"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/facilities"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/massages-archive"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/settings"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>
              </ErrorBoundary>
            </div>,
            <Footer />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "enterTimeout": 400,
              "leaveTimeout": 400,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <ErrorBoundary>
                <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/my-massages"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/facilities"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/massages-archive"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/settings"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>
              </ErrorBoundary>,
              "className": "container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <Switch>
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/my-massages"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/facilities"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/massages-archive"
                  />
                  <Route
                    component={[Function]}
                    exact={true}
                    path="/settings"
                  />
                  <Route
                    component={[Function]}
                  />
                </Switch>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/"
                    />,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/my-massages"
                    />,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/facilities"
                    />,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/massages-archive"
                    />,
                    <Route
                      component={[Function]}
                      exact={true}
                      path="/settings"
                    />,
                    <Route
                      component={[Function]}
                    />,
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/my-massages",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/facilities",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/massages-archive",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                      "exact": true,
                      "path": "/settings",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "component": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`renders unauthorized content correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "title": "Masáže",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "title": "Masáže",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
