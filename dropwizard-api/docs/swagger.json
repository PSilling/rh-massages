
{
    "swagger": "2.0",
    "info": {
        "version": "1.7.6",
        "title": "Red Hat Massages Server"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "paths": {
        "/clients": {
            "get": {
                "description": "GETs all {@link Client}s that can be found.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a {@link Client} to an updated value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Client"
                        },
                        "description": "updated {@link Client}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/Client"
                        }
                    },
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/clients/masseuses": {
            "get": {
                "description": "GETs all {@link Client}s that are registered as masseurs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    }
                }
            }
        },
        "/clients/retrieve-info": {
            "get": {
                "description": "GETs local information of a {@link Client} (currently only his subscription value). For new\n {@link User}s creates their {@link Client} representation while returning {@link User}s get\n their {@link Client} representation updated if a change is detected.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "description": "authenticated {@link User}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/clients/users": {
            "get": {
                "description": "GETs all {@link Client}s that are registered as normal users (non-masseurs).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Client"
                            }
                        }
                    }
                }
            }
        },
        "/clients/{sub}": {
            "delete": {
                "description": "Deletes a {@link Client} given by the subject. All massages assigned to that client are freed\n before the deletion or, if the client is a masseur, those massages are automatically removed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "sub",
                        "in": "path",
                        "required": true,
                        "description": "{@link Client} subject"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/facilities": {
            "get": {
                "description": "GETs all {@link Facility}s that can be found.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Facility"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Accepts POST request with a new {@link Facility}.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Facility"
                        },
                        "description": "new {@link Facility} to be created"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "headers": {
                            "Location": {
                                "type": "string"
                            }
                        },
                        "schema": {
                            "$ref": "#/definitions/Facility"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/facilities/{id}": {
            "get": {
                "description": "GETs a {@link Facility} based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "{@link Facility} ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/Facility"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a {@link Facility} given by ID to a given value.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "{@link Facility} ID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Facility"
                        },
                        "description": "an updated {@link Facility}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/Facility"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a {@link Facility} given by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "{@link Facility} ID"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/facilities/{id}/massages": {
            "get": {
                "description": "GETs all {@link Massage}s of a {@link Facility} that haven't already passed based on {@link\n Facility} ID and query parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "{@link Facility} ID"
                    },
                    {
                        "type": "boolean",
                        "name": "free",
                        "in": "query",
                        "required": false,
                        "description": "whether only unassigned {@link Massage}s should be shown",
                        "default": "false"
                    },
                    {
                        "type": "string",
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "description": "limits results to be after the {@link Date} in milliseconds",
                        "default": "-1"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "current page number; for 0 doesn't use pagination",
                        "default": "0"
                    },
                    {
                        "type": "string",
                        "name": "perPage",
                        "in": "query",
                        "required": false,
                        "description": "number of {@link Massage}s to return per each page",
                        "default": "12"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description": "value of the {@link String} to be searched for"
                    },
                    {
                        "type": "string",
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "description": "limits results to be after the {@link Date} in milliseconds",
                        "default": "-1"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "description": "authenticated {@link User}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "object"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/massages": {
            "get": {
                "description": "GETs all {@link Massage}s that can be found.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Updates {@link Massage}s in a {@link List}. Supplying ID in {@link Massage}s is necessary.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        },
                        "description": "{@link List} of updated {@link Massage}s"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            },
            "post": {
                "description": "Accepts POST request with a new {@link List} of {@link Massage}s.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        },
                        "description": "{@link List} of {@link Massage}s to create"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "headers": {
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes {@link Massage}s given by their IDs.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "name": "ids",
                        "in": "query",
                        "required": true,
                        "description": "{@link List} of {@link Massage} IDs"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/massages/client": {
            "get": {
                "description": "GETs all {@link Massage}s of a given {@link Client} that haven't already passed.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        },
                        "description": "authenticated {@link User}"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Massage"
                            }
                        }
                    }
                }
            }
        },
        "/massages/old": {
            "get": {
                "description": "GETs all {@link Massage}s that are dated after the current time.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "boolean",
                        "name": "free",
                        "in": "query",
                        "required": true,
                        "description": "whether only unassigned {@link Massage}s should be shown"
                    },
                    {
                        "type": "string",
                        "name": "from",
                        "in": "query",
                        "required": false,
                        "description": "limits results to be after the {@link Date} in milliseconds",
                        "default": "-1"
                    },
                    {
                        "type": "string",
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "current page number; for -1 doesn't use pagination",
                        "default": "0"
                    },
                    {
                        "type": "string",
                        "name": "perPage",
                        "in": "query",
                        "required": false,
                        "description": "number of {@link Massage}s to return per each page",
                        "default": "12"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query",
                        "required": true,
                        "description": "value of the {@link String} to be searched for"
                    },
                    {
                        "type": "string",
                        "name": "to",
                        "in": "query",
                        "required": false,
                        "description": "limits results to be after the {@link Date} in milliseconds",
                        "default": "-1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/massages/{id}": {
            "get": {
                "description": "GETs a {@link Massage} based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "description": "{@link Massage} ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "headers": {
                        },
                        "schema": {
                            "$ref": "#/definitions/Massage"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        },
        "/websockets": {
            "post": {
                "description": "Accepts POST requests with WebSocket session ID and the hashed authentication code (separated\n by '_', just like in the initial server message). If the hash matches hashed value of the saved\n code, the WebSocket is automatically authenticated. First and last message characters (should\n be JSON brackets) are ignored.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "headers": {
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "headers": {
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "headers": {
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "headers": {
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Client": {
            "properties": {
                "email": {
                    "type": "string"
                },
                "masseur": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "sub": {
                    "type": "string"
                },
                "subscribed": {
                    "type": "boolean"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "Facility": {
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Massage": {
            "properties": {
                "client": {
                    "$ref": "#/definitions/Client"
                },
                "date": {
                    "type": "object"
                },
                "ending": {
                    "type": "object"
                },
                "facility": {
                    "$ref": "#/definitions/Facility"
                },
                "id": {
                    "type": "integer"
                },
                "masseuse": {
                    "$ref": "#/definitions/Client"
                }
            }
        },
        "User": {
            "properties": {
                "admin": {
                    "type": "boolean"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "masseur": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subject": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        }
    }
}